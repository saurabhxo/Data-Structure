#include <iostream>
using namespace std;
struct node
{
    int data;
    struct node *next;
}*first=NULL,*second=NULL;

void create(int A[],int n)
{
    int i;
    struct node *t,*last;
    first = new node;
    first->data=A[0];
    first->next=NULL;
    last=first;
    for(i=1;i<n;i++)
    {
        t=new node;
        t->data=A[i];
        t->next=NULL;
        last->next=t;
        last=t;
        
    }
    
}
void create2(int B[],int n)
{
    int i;
    struct node *t,*last;
    second = new node;
    second->data=B[0];
    second->next=NULL;
    last=second;
    for(i=1;i<n;i++)
    {
        t=new node;
        t->data=B[i];
        t->next=NULL;
        last->next=t;
        last=t;
        
    }
    
}
void display(struct node *p)
{
 while(p!=NULL)
 {
     cout<<p->data<<" ";
     p=p->next;
 }
}
void merge(struct node *p,struct node *q)
{
    struct node *last=p;
    while(p->next!=NULL&&q!=NULL)
    {
        p=p->next;
        last->next=q;
        last=q;
        
        q=q->next;
        last->next=p;
       last=p;
    }
    if(p->next==NULL)
    p->next=q;
    else if(q==NULL)
        q=p;
}
int main() 
{
    int A[]={1,3,5,7,9,11,13,15,17};
    int B[]={2,4,6,8,10,12};
    create (A,9);
    create2 (B,6);
    merge(first,second);
   display(first);
	return 0;
}
*******************************************************************************************************
input
    LL1=1,3,5,7,9,11,13,15,17
    LL2==2,4,6,8,10,12
 output
 1 2 3 4 5 6 7 8 9 10 11 12 13 15 17 
